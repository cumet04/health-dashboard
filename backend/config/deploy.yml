service: health_dashboard_backend
image: ghcr.io/cumet04/health-dashboard/backend

servers:
  # WSLの別インスタンス宛デプロイだが、IP自体は全部同じなようなので、デプロイマシンのIPをデプロイ先として使う
  web:
    - <%= %x(hostname -I | cut -d' ' -f 1) %>

ssh:
  user: inomoto

proxy:
  # host名として暗黙のkamal-proxyのコンテナ名を指定することで、frontendコンテナからproxy経由でbackendに疎通できるようにする
  host: kamal-proxy

registry:
  server: ghcr.io
  username:
    - GITHUB_USER
  password:
    - GITHUB_TOKEN

env:
  secret:
    - SECRET_KEY_BASE
  clear:
    # MEMO: env.secretを使う場合は通常の環境変数セットはclearの下に置く必要がある
    # ↓はサンプルレコードなので不要になったら消す
    RAILS_LOG_LEVEL: debug

aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"

volumes:
  - "health_dashboard_storage:/rails/storage"

builder:
  arch: amd64
  # # Pass arguments and secrets to the Docker build process
  # args:
  #   RUBY_VERSION: ruby-3.3.5
  # secrets:
  #   - GITHUB_TOKEN
  #   - RAILS_MASTER_KEY

# Use accessory services (secrets come from .kamal/secrets).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     # Change to 3306 to expose port to the world instead of just local network.
#     port: "127.0.0.1:3306:3306"
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data
